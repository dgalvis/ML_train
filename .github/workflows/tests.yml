name: Run Unit Tests 

on: [push, pull_request]

jobs:
  test:
    runs-on: macos-latest

    # Ensure conda activation works in every `run:` step
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache downloaded Conda packages (tarballs) to speed up (re)installs
      - name: Cache Conda package downloads
        uses: actions/cache@v4
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-pkgs-${{ hashFiles('requirements_test.yml') }}

      # Install Miniconda (no env-file here; we want to restore a cached env if available)
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          use-only-tar-bz2: true
          python-version: "3.12.11"

      # Capture the exact Python MAJOR.MINOR to include in the env cache key
      - name: Get Python version
        id: py
        run: echo "ver=$(python -c 'import sys;print(f\"{sys.version_info.major}.{sys.version_info.minor}\")')" >> $GITHUB_OUTPUT

      # Cache the fully built env directory so we can skip solving/installing on hits
      - name: Cache Conda environment (ML_train_test)
        id: env-cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CONDA }}/envs
          # Separate caches by OS, CPU arch, Python MAJOR.MINOR, and env file contents
          key: conda-env-${{ runner.os }}-${{ runner.arch }}-py${{ steps.py.outputs.ver }}-${{ hashFiles('requirements_test.yml') }}

      # Only build/update the env if the env cache missed
      - name: Create/Update environment (cache miss only)
        if: steps.env-cache.outputs.cache-hit != 'true'
        run: |
          if conda env list | grep -qE '^[^#]*\bML_train_test\b'; then
            conda env update -n ML_train_test -f requirements_test.yml
          else
            conda env create -n ML_train_test -f requirements_test.yml
          fi

      - name: Activate env and run tests
        run: |
          conda activate ML_train_test
          cd codes
          python -m modules.test_lin_reg

